Python For Loops
  A for loop is used for iterating over a sequence (that is either a list, a tuple, a dictionary, a set, or a string).
  This is less like the for keyword in other programming languages, and works more like an iterator method as found in other object-orientated programming languages.
  With the for loop we can execute a set of statements, once for each item in a list, tuple, set etc.
  Example
  Print each fruit in a fruit list:
      fruits = ["apple", "banana", "cherry"]
      for x in fruits:
        print(x)

Looping Through a String
  Even strings are iterable objects, they contain a sequence of characters:
  Example
  Loop through the letters in the word "banana":

      for x in "banana":
        print(x)

The break Statement
  With the break statement we can stop the loop before it has looped through all the items:
  Example
  Exit the loop when x is "banana":

      fruits = ["apple", "banana", "cherry"]
      for x in fruits:
        print(x)
        if x == "banana":
          break

  Exit the loop when x is "banana", but this time the break comes before the print:

      fruits = ["apple", "banana", "cherry"]
      for x in fruits:
        if x == "banana":
          break
        print(x)


The range() Function
  To loop through a set of code a specified number of times, we can use the range() function,
  The range() function returns a sequence of numbers, starting from 0 by default, and increments by 1 (by default), and ends at a specified number.
  Example
  Using the range() function:
      
      for x in range(6):
        print(x)


Else in For Loop
  The else keyword in a for loop specifies a block of code to be executed when the loop is finished:
  Example
  Print all numbers from 0 to 5, and print a message when the loop has ended:

      for x in range(6):
        print(x)
      else:
        print("Finally finished!")



Exercise 1:
Loop through the items in the fruits list.

    fruits = ["apple", "banana", "cherry"]
    for x in fruits:
      print(x)


Exercise 2:
In the loop, when the item value is "banana", jump directly to the next item.
    fruits = ["apple", "banana", "cherry"]
    for x in fruits:
      if x == "banana":
        continue
      print(x)


Exercise 3:
Use the range function to loop through a code set 6 times.
    for x in range(6): 
      print(x)


Exercise 4:
Exit the loop when x is "banana".
    fruits = ["apple", "banana", "cherry"]
    for x in fruits:
      if x == "banana":
        break
      print(x)



































